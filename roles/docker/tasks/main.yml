---
- name: Determining if Docker is already install
  shell: docker --version
  register: docker_installed
  ignore_errors: true
  changed_when: false
- debug:
    msg: "{{ docker_installed.stdout }}"

- name: See if selinux is running
  shell: getenforce
  register: sestatus
  
- name: Disable SELinux at next reboot
  selinux:
   state: disabled
  when: sestatus.stdout == "Enforcing"
  
- name: printing current selinux status
  debug: msg="selinux is {{sestatus.stdout}}"
  
- name: restart server
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  ignore_errors: true
  become: true
  when: sestatus.stdout!="Disabled"
  
- name: Wait for machine to come back
  wait_for_connection:
    connect_timeout: 20
    delay: 10
    sleep: 10
    timeout: 120
  when: sestatus.stdout!="Disabled"

- name: Docker and its Dependencies installation
  yum: 
    name="{{ item }}"
    update_cache=yes
    state=present
  with_items:
   - python-setuptools
   - python-docker-py
   - docker
   - wget
#  when: "'Docker version 1.13.1' in docker_installed.stdout"     
#  when: ansible_distribution == 'RedHat'
- name: starting and enable docker at boot time
  service: name=docker state=started enabled=true
  
- name: copy daemon.json file
  copy:
    src: daemon.json
    dest: /etc/docker
    mode: 0755
  when: ansible_distribution == 'RedHat'
   
- name: restar docker after copy daemon.json file
  shell: systemctl restart docker